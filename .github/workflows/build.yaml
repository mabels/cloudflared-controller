name: go-build

on:
  pull_request:
  push:

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        include:
          - platform: ubuntu-latest

    name: Build ${{ join(matrix.platform, ',') }} cloudflared-controller
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.5.0

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Create CRDs from cloudflare-schema
        run: |
          node build-crd/build-crd.mjs > cloudflare-schema.crds.json
          kubectl apply -f cloudflare-schema.crds.json
          kubectl apply -f build-crd/access-group.example.yaml
          kubectl apply -f build-crd/cfd-tunnel.example.yaml
          kubectl apply -f build-crd/cfd-tunnel-config.example.yaml
          git diff --exit-code
          # git add cloudflare-schema.crds.json
          # git commit -am "chore: update build time cloudflare-schema.crds.json"

      - name: Get Latest Cloudflared Version
        run: |
          node .github/workflows/query_versions.js cloudflare/cloudflared | tee -a $GITHUB_ENV

      - name: 'Get Current tag'
        id: currentTag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          prefix: v

      - name: 'Get next minor version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.currentTag.outputs.tag }}

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Check image
        run: |
          if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]
          then
            CTRL_VERSION=$(echo ${{ github.ref }} | sed 's|^refs/tags/||')
            echo RELEASE_TAG=latest | tee -a $GITHUB_ENV
            echo PRERELEASE=false | tee -a $GITHUB_ENV
          else
            if [[ ${{ github.event_name }} == schedule ]]
            then
               CTRL_VERSION=v${{ steps.currentTag.outputs.tag }}
               echo RELEASE_TAG=latest | tee -a $GITHUB_ENV
               echo PRERELEASE=false | tee -a $GITHUB_ENV
            else
               CTRL_VERSION=v${{ steps.semvers.outputs.patch }}-pre$(git rev-parse --short HEAD)
               echo PRERELEASE=true | tee -a $GITHUB_ENV
               echo RELEASE_TAG=dev | tee -a $GITHUB_ENV
            fi
          fi
          BUILD_VERSION=${CTRL_VERSION}-cfd${{ env.CLOUDFLARE_CLOUDFLARED_VERSION }}
          if docker manifest inspect ghcr.io/mabels/cloudflared-controller:$BUILD_VERSION
          then
            echo "SKIP-RELEASE"
          else
            echo "PUSH_TAG=needed" | tee -a $GITHUB_ENV
            echo "BUILD_VERSION=$BUILD_VERSION" | tee -a $GITHUB_ENV
            git tag $BUILD_VERSION
          fi

      - name: Set up Docker Buildx
        if: ${{ env.PUSH_TAG == 'needed' }}
        uses: docker/setup-buildx-action@v2

      - name: Run GoReleaser RELEASE
        if: ${{ env.PUSH_TAG == 'needed' }}
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

